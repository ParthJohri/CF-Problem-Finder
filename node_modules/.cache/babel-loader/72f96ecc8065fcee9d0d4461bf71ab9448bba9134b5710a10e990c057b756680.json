{"ast":null,"code":"var _jsxFileName = \"/Users/parthjohri/Dropbox/My Mac (Parths-MacBook-Air.local)/Downloads/cf-problem-finders/codeforces-problems/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport ProblemTable from \"./components/ProblemTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [problems, setProblems] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const handleUsernameSubmit = username => {\n    setUsername(username);\n\n    // Make the API request and set the problems state\n    fetch(`https://codeforces.com/api/user.status?handle=${username}`).then(response => response.json()).then(data => {\n      if (data.status === \"OK\") {\n        const processedProblems = processData(data.result);\n        setProblems(processedProblems);\n      } else {\n        console.error(data.status + \" : \" + data.comment);\n      }\n    });\n  };\n  const processData = resultArr => {\n    // Process data as in your existing code and return an array of problems\n    // Modify this function to match your existing code logic\n    const processedProblems = resultArr.map(sub => ({\n      problemId: `${sub.problem.contestId}/${sub.problem.index}`,\n      rating: sub.problem.rating\n    }));\n    return processedProblems;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Codeforces Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onUsernameSubmit: handleUsernameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), username && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Problems for User: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this), problems.length > 0 && /*#__PURE__*/_jsxDEV(ProblemTable, {\n      problems: problems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cdc+l1VNbTtqQddDPpmR6Ubm/g4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserInput","ProblemTable","jsxDEV","_jsxDEV","App","_s","problems","setProblems","username","setUsername","handleUsernameSubmit","fetch","then","response","json","data","status","processedProblems","processData","result","console","error","comment","resultArr","map","sub","problemId","problem","contestId","index","rating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUsernameSubmit","length","_c","$RefreshReg$"],"sources":["/Users/parthjohri/Dropbox/My Mac (Parths-MacBook-Air.local)/Downloads/cf-problem-finders/codeforces-problems/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport ProblemTable from \"./components/ProblemTable\";\n\nfunction App() {\n  const [problems, setProblems] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleUsernameSubmit = (username) => {\n    setUsername(username);\n\n    // Make the API request and set the problems state\n    fetch(`https://codeforces.com/api/user.status?handle=${username}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === \"OK\") {\n          const processedProblems = processData(data.result);\n          setProblems(processedProblems);\n        } else {\n          console.error(data.status + \" : \" + data.comment);\n        }\n      });\n  };\n\n  const processData = (resultArr) => {\n    // Process data as in your existing code and return an array of problems\n    // Modify this function to match your existing code logic\n    const processedProblems = resultArr.map((sub) => ({\n      problemId: `${sub.problem.contestId}/${sub.problem.index}`,\n      rating: sub.problem.rating,\n    }));\n    return processedProblems;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Codeforces Problems</h1>\n      <UserInput onUsernameSubmit={handleUsernameSubmit} />\n      {username && <h2>Problems for User: {username}</h2>}\n      {problems.length > 0 && <ProblemTable problems={problems} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,oBAAoB,GAAIF,QAAQ,IAAK;IACzCC,WAAW,CAACD,QAAQ,CAAC;;IAErB;IACAG,KAAK,CAAE,iDAAgDH,QAAS,EAAC,CAAC,CAC/DI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;QACxB,MAAMC,iBAAiB,GAAGC,WAAW,CAACH,IAAI,CAACI,MAAM,CAAC;QAClDZ,WAAW,CAACU,iBAAiB,CAAC;MAChC,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAACN,IAAI,CAACC,MAAM,GAAG,KAAK,GAAGD,IAAI,CAACO,OAAO,CAAC;MACnD;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMJ,WAAW,GAAIK,SAAS,IAAK;IACjC;IACA;IACA,MAAMN,iBAAiB,GAAGM,SAAS,CAACC,GAAG,CAAEC,GAAG,KAAM;MAChDC,SAAS,EAAG,GAAED,GAAG,CAACE,OAAO,CAACC,SAAU,IAAGH,GAAG,CAACE,OAAO,CAACE,KAAM,EAAC;MAC1DC,MAAM,EAAEL,GAAG,CAACE,OAAO,CAACG;IACtB,CAAC,CAAC,CAAC;IACH,OAAOb,iBAAiB;EAC1B,CAAC;EAED,oBACEd,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjC,OAAA,CAACH,SAAS;MAACqC,gBAAgB,EAAE3B;IAAqB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpD5B,QAAQ,iBAAIL,OAAA;MAAA6B,QAAA,GAAI,qBAAmB,EAACxB,QAAQ;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClD9B,QAAQ,CAACgC,MAAM,GAAG,CAAC,iBAAInC,OAAA,CAACF,YAAY;MAACK,QAAQ,EAAEA;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAAC/B,EAAA,CAtCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}