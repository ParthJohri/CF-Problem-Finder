{"ast":null,"code":"var _jsxFileName = \"/Users/parthjohri/Dropbox/My Mac (Parths-MacBook-Air.local)/Downloads/cf-problem-finders/codeforces-problems/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport ProblemTable from \"./components/ProblemTable\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [problems, setProblems] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const handleUsernameSubmit = username => {\n    setUsername(username);\n    fetch(`https://codeforces.com/api/user.status?handle=${username}`).then(response => response.json()).then(data => {\n      if (data.status === \"OK\") {\n        const processedProblems = processData(data.result);\n        setProblems(processedProblems);\n      } else {\n        console.error(data.status + \" : \" + data.comment);\n      }\n    });\n  };\n  const processData = resultArr => {\n    // Process data as in your existing code and return an array of problems\n    // Modify this function to match your existing code logic\n    const processedProblems = resultArr.map(sub => ({\n      problemId: `${sub.problem.contestId}/${sub.problem.index}`,\n      rating: sub.problem.rating\n    }));\n    return processedProblems;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Codeforces Problems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(UserInput, {\n          onUsernameSubmit: handleUsernameSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), username && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-4\",\n          children: [\"Problems for User: \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this), problems.length > 0 && /*#__PURE__*/_jsxDEV(ProblemTable, {\n          problems: problems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Made by Parth Johri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.linkedin.com/in/parthjohri07\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"LinkedIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/parthjohri\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cdc+l1VNbTtqQddDPpmR6Ubm/g4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserInput","ProblemTable","jsxDEV","_jsxDEV","App","_s","problems","setProblems","username","setUsername","handleUsernameSubmit","fetch","then","response","json","data","status","processedProblems","processData","result","console","error","comment","resultArr","map","sub","problemId","problem","contestId","index","rating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUsernameSubmit","length","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/parthjohri/Dropbox/My Mac (Parths-MacBook-Air.local)/Downloads/cf-problem-finders/codeforces-problems/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport ProblemTable from \"./components/ProblemTable\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [problems, setProblems] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleUsernameSubmit = (username) => {\n    setUsername(username);\n\n    fetch(`https://codeforces.com/api/user.status?handle=${username}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === \"OK\") {\n          const processedProblems = processData(data.result);\n          setProblems(processedProblems);\n        } else {\n          console.error(data.status + \" : \" + data.comment);\n        }\n      });\n  };\n\n  const processData = (resultArr) => {\n    // Process data as in your existing code and return an array of problems\n    // Modify this function to match your existing code logic\n    const processedProblems = resultArr.map((sub) => ({\n      problemId: `${sub.problem.contestId}/${sub.problem.index}`,\n      rating: sub.problem.rating,\n    }));\n    return processedProblems;\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-center\">\n          <h1>Codeforces Problems</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <UserInput onUsernameSubmit={handleUsernameSubmit} />\n          {username && <h2 className=\"mt-4\">Problems for User: {username}</h2>}\n          {problems.length > 0 && <ProblemTable problems={problems} />}\n        </div>\n      </div>\n      <footer className=\"mt-4 text-center\">\n        <h3>Made by Parth Johri</h3>\n        <a\n          href=\"https://www.linkedin.com/in/parthjohri07\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          LinkedIn\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href=\"https://github.com/parthjohri\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}